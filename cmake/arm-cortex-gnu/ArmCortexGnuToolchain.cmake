SET(TARGET_TRIPLET "arm-none-eabi")
SET(ARM_COMPILER_VERSION 12.2.rel1)
SET(ARM_COMPILER_PATH /opt/arm-gnu-toolchain-${ARM_COMPILER_VERSION}-x86_64-${TARGET_TRIPLET}/bin)
# Without that flag CMake is not able to pass test compilation check
SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

SET(CMAKE_C_COMPILER ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc${ARM_COMPILER_EXT})
SET(CMAKE_CXX_COMPILER ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-g++${ARM_COMPILER_EXT})
SET(CMAKE_ASM_COMPILER ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc${ARM_COMPILER_EXT})
SET(CMAKE_LINKER ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc${ARM_COMPILER_EXT})
SET(CMAKE_SIZE_UTIL ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-size${ARM_COMPILER_EXT})
SET(CMAKE_OBJCOPY ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-objcopy${ARM_COMPILER_EXT})
SET(CMAKE_OBJDUMP ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-objdump${ARM_COMPILER_EXT})
SET(CMAKE_NM_UTIL ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc-nm${ARM_COMPILER_EXT})
SET(CMAKE_AR ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc-ar${ARM_COMPILER_EXT})
SET(CMAKE_RANLIB ${ARM_COMPILER_PATH}/${TARGET_TRIPLET}-gcc-ranlib${ARM_COMPILER_EXT})

SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# Compiler and linker flags
SET(CMAKE_COMMON_FLAGS "${MCPU_FLAGS} ${VFP_FLAGS} -g3 -ffunction-sections -fdata-sections -fno-strict-aliasing -fno-builtin -fno-common -Wall -Wshadow -Wdouble-promotion -Werror -Wno-unused-parameter")

SET(CMAKE_C_FLAGS_INIT "${CMAKE_COMMON_FLAGS}")
SET(CMAKE_CXX_FLAGS_INIT "${CMAKE_COMMON_FLAGS}")
SET(CMAKE_ASM_FLAGS_INIT "${CMAKE_COMMON_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS_INIT "${LD_FLAGS} --specs=nosys.specs -Wl,--gc-sections,-print-memory-usage")

SET(CMAKE_C_FLAGS_DEBUG_INIT "-O0")
SET(CMAKE_CXX_ASM_FLAGS_DEBUG_INIT "-O0")
SET(CMAKE_ASM_FLAGS_DEBUG_INIT "")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT "")

SET(CMAKE_C_FLAGS_RELEASE_INIT "-Os -flto")
SET(CMAKE_CXX_FLAGS_RELEASE_INIT "-Os -flto")
SET(CMAKE_ASM_FLAGS_RELEASE_INIT "")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT "-flto")
